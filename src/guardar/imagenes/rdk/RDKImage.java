/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package guardar.imagenes.rdk;
import ConectionRDK.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.JOptionPane;
import javax.swing.JFileChooser;
import javax.swing.Timer;
import java.io.*;
import java.nio.file.DirectoryIteratorException;
import java.nio.file.DirectoryStream;
import java.nio.file.FileSystems;
import java.nio.file.Files;
import java.nio.file.Path;
import java.sql.Connection;
import java.sql.*;

/**
 *
 * @author Development
 */
public class RDKImage extends javax.swing.JFrame {

    /**
     * Creates new form RDKImage
     */
    public RDKImage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        ConsolaInsert = new javax.swing.JTextArea();
        BSCarpeta = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        ConsolaError = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setAlwaysOnTop(true);
        setResizable(false);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        ConsolaInsert.setColumns(20);
        ConsolaInsert.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ConsolaInsert.setRows(5);
        jScrollPane1.setViewportView(ConsolaInsert);

        BSCarpeta.setText("Seleccione Carpeta");
        BSCarpeta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BSCarpetaActionPerformed(evt);
            }
        });

        ConsolaError.setColumns(20);
        ConsolaError.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        ConsolaError.setRows(5);
        jScrollPane2.setViewportView(ConsolaError);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel1.setText("Se guaradon o ya existe: ");

        jLabel2.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel2.setText("Imagenes que no se encuentra ID: ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BSCarpeta, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 328, Short.MAX_VALUE))))
                .addGap(26, 26, 26))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BSCarpeta)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 204, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void BSCarpetaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BSCarpetaActionPerformed
        // TODO add your handling code here:
        //progresoi.start();
        String cadena;
        JFileChooser SeccionCar = new JFileChooser();
        SeccionCar.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int OpEl = SeccionCar.showOpenDialog(jPanel1);
        
        if(OpEl==JFileChooser.APPROVE_OPTION)
        {
            String carpeta = SeccionCar.getCurrentDirectory().getAbsolutePath();
            Path dir = FileSystems.getDefault().getPath(carpeta);
            try (DirectoryStream<Path> stream = Files.newDirectoryStream(dir,"*.jpg"))
            {
                for (Path file: stream) 
                {
                    cadena = file.getFileName().toString();
                    cadena = cadena.replace(".jpg","");
                    insertarimagen(file,cadena);
                }
            }
            catch (IOException | DirectoryIteratorException x) {
    // IOException can never be thrown by the iteration.
    // In this snippet, it can only be thrown by newDirectoryStream.
    System.err.println(x);
}
            
        }
    }//GEN-LAST:event_BSCarpetaActionPerformed

    public void insertarimagen(Path file,String c)
    {
        conectionrdk = new ConectionRDK();
        Connection con = conectionrdk.getConection();
        PreparedStatement statement= null;
        String sql = "insert into image(idarticulo,image) values(?,?)";
        FileInputStream fis = null;
        File imagen;
        imagen = file.toFile();
        try{
            fis = new FileInputStream(imagen);
            statement = con.prepareStatement(sql);
            statement.setString(1,c);
            statement.setBinaryStream(2,fis,(int)imagen.length());
            int a = statement.executeUpdate();
            if(a==1)
            {
                ConsolaInsert.append(imagen.getPath());
                ConsolaInsert.append(" ¡Guardado! \n\n");
            }
            con.close();
        }
        catch(FileNotFoundException | SQLException ex){
            if(comprobar(c)==true)
            {
                ConsolaInsert.append(imagen.getPath());
                ConsolaInsert.append(" ¡Ya existe! \n\n");
            }
            else
            {
                ConsolaError.append(imagen.getPath());
                ConsolaError.append(" Error\n\n");
            }
        }
    }
    public boolean comprobar(String C){
        conectionrdk = new ConectionRDK();
        Connection con = conectionrdk.getConection();
        PreparedStatement statement= null;
        boolean existe = false;
        try{
            String sql= "SELECT * FROM image  WHERE idarticulo=? ";
            statement = con.prepareStatement(sql);
            statement.setString(1,C);
 
            ResultSet rs = statement.executeQuery();
            while (rs.next()){
                existe= true;
            }
            con.close();
        }
        catch(SQLException ex){
        }
        return existe;
    }
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:
    }//GEN-LAST:event_formWindowOpened

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RDKImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RDKImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RDKImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RDKImage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RDKImage().setVisible(true);
            }
        });
    }
    ConectionRDK conectionrdk;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BSCarpeta;
    private javax.swing.JTextArea ConsolaError;
    private javax.swing.JTextArea ConsolaInsert;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
